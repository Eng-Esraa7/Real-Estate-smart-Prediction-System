@model RealState.Models.State

@{
    ViewBag.Title = "EdiState";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/css/states.css">
<link rel="stylesheet" href="~/css/sell.css">
<link rel="stylesheet" href="~/css/details.css">

<style>
    .d .img {
        width: 50%;
        height: 50%;
        margin-left: 25%;
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
        border-radius: 20px;
        margin-top: 50px
    }

    .d img {
        width: 100%;
        height: 100%;
        border-radius: 20px;
        overflow: hidden
    }

    .d label {
        color: #32749b
    }
</style>

@using (Html.BeginForm("Edit", "States", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    <!--start sell-->
    <div class="states">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <h2 class="text-center mb-0">Update Your State</h2>
    </div>
    <div class="search">
        <form action="#">
            <div class="row text-center sell d">
                <b class="searchby">Image Of Your State</b>
                <div class="img mb-3">
                    <img src="@Model.link"
                         class="card-img-top" alt="...">
                </div>
                <div class="mb-3 mt-3">
                    <input type="file" class="form-control" name="file" accept="image/*" />
                </div>
                <div class="mb-3">
                    @*<input type="number" class="form-control" placeholder="price">*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="mb-3">
                    @*<input type="number" class="form-control" id="area" placeholder="area">*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="">
                            @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="mb-3">
                    @*<input type="text" class="form-control" id="city" placeholder="City">*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="mb-3">
                    @* <input type="number" class="form-control" placeholder="bedrooms">*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.Bedrooms, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="">
                            @Html.EditorFor(model => model.Bedrooms, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Bedrooms, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="mb-3">
                    @*<input type="number" class="form-control" id="bathrooms" placeholder="bathrooms">*@
                    <div class="form-group">
                        @Html.LabelFor(model => model.Bathrooms, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="">
                            @Html.EditorFor(model => model.Bathrooms, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Bathrooms, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="input-box message-box">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="">
                            @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*<textarea name="msg" id="textarea" placeholder="description" class="form-control"
            rows="10"></textarea>*@
                </div>

                <b class="searchby" for="BuyRent">State:</b>

                @Html.DropDownListFor(m => m.BuyRent,
                new List<SelectListItem> {
                new SelectListItem{ Text="Sell"},
                new SelectListItem{ Text="Rent"},
                new SelectListItem{ Text="Sell & Rent"}
                }
                , new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.BuyRent, "", new { @class = "text-danger" })

                <b class="searchby">Furnished:</b>
                @Html.DropDownListFor(m => m.Furnished,
               new List<SelectListItem> {
               new SelectListItem{ Text="Yes"},
               new SelectListItem{ Text="No"},
               new SelectListItem{ Text="Unknown"}
               }
               , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Furnished, "", new { @class = "text-danger" })

                <b class="searchby">Security:</b>

                @Html.DropDownListFor(m => m.Security,
               new List<SelectListItem> {
               new SelectListItem{ Text="Available"},
               new SelectListItem{ Text="Not Available"}
               }
               , new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.Security, "", new { @class = "text-danger" })

                <b class="searchby">Balcony:</b>

                @Html.DropDownListFor(m => m.Balcony,
              new List<SelectListItem> {
              new SelectListItem{ Text="Available"},
              new SelectListItem{ Text="Not Available"}
              }
              , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Balcony, "", new { @class = "text-danger" })


                <b class="searchby">Private_Garden:</b>

                @Html.DropDownListFor(m => m.Private_Garden,
                new List<SelectListItem> {
                new SelectListItem{ Text="Available"},
                new SelectListItem{ Text="Not Available"}
                }
                , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Private_Garden, "", new { @class = "text-danger" })


                <b class="searchby">Pets_allowed:</b>

                @Html.DropDownListFor(m => m.Pets_Allowed,
             new List<SelectListItem> {
             new SelectListItem{ Text="Available"},
             new SelectListItem{ Text="Not Available"}
             }
             , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Pets_Allowed, "", new { @class = "text-danger" })

                <b class="searchby">Covered_Parking:</b>

                @Html.DropDownListFor(m => m.Covered_Parking,
             new List<SelectListItem> {
             new SelectListItem{ Text="Available"},
             new SelectListItem{ Text="Not Available"}
             }
             , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Covered_Parking, "", new { @class = "text-danger" })

                <b class="searchby">maids_Room:</b>

                @Html.DropDownListFor(m => m.Maids_Room,
             new List<SelectListItem> {
             new SelectListItem{ Text="Available"},
             new SelectListItem{ Text="Not Available"}
             }
             , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Maids_Room, "", new { @class = "text-danger" })

                <b class="searchby">Electricity_Meter:</b>

                @Html.DropDownListFor(m => m.Electricity_Meter,
             new List<SelectListItem> {
             new SelectListItem{ Text="Available"},
             new SelectListItem{ Text="Not Available"}
             }
             , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Electricity_Meter, "", new { @class = "text-danger" })

                <b class="searchby">Natueal_Gas:</b>

                @Html.DropDownListFor(m => m.Natural_Gas,
              new List<SelectListItem> {
              new SelectListItem{ Text="Available"},
              new SelectListItem{ Text="Not Available"}
              }
              , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Natural_Gas, "", new { @class = "text-danger" })

                <b class="searchby">Landline:</b>

                @Html.DropDownListFor(m => m.Landline,
             new List<SelectListItem> {
             new SelectListItem{ Text="Available"},
             new SelectListItem{ Text="Not Available"}
             }
             , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Landline, "", new { @class = "text-danger" })

                <b class="searchby">Pool:</b>

                @Html.DropDownListFor(m => m.Pool,
             new List<SelectListItem> {
             new SelectListItem{ Text="Available"},
             new SelectListItem{ Text="Not Available"}
             }
             , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Pool, "", new { @class = "text-danger" })

                <b class="searchby">Central heating:</b>

                @Html.DropDownListFor(m => m.Central_heating,
            new List<SelectListItem> {
            new SelectListItem{ Text="Available"},
            new SelectListItem{ Text="Not Available"}
            }
            , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Central_heating, "", new { @class = "text-danger" })

                <b class="searchby">Built_in_kitchen_Appliances:</b>

                @Html.DropDownListFor(m => m.Built_in_Kitchen_Appliances,
            new List<SelectListItem> {
            new SelectListItem{ Text="Available"},
            new SelectListItem{ Text="Not Available"}
            }
            , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Built_in_Kitchen_Appliances, "", new { @class = "text-danger" })

                <b class="searchby">Elevator:</b>

                @Html.DropDownListFor(m => m.Elevator,
            new List<SelectListItem> {
            new SelectListItem{ Text="Available"},
            new SelectListItem{ Text="Not Available"}
            }
            , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Elevator, "", new { @class = "text-danger" })

                <b class="searchby">Offer:</b>

                @Html.DropDownListFor(m => m.Offers,
            new List<SelectListItem> {
            new SelectListItem{ Text="Yes"},
            new SelectListItem{ Text="No"}
            }
            , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Offers, "", new { @class = "text-danger" })

                <b class="searchby">Payment_option:</b>

                @Html.DropDownListFor(m => m.PaymentOption,
            new List<SelectListItem> {
            new SelectListItem{ Text="Cash"},
            new SelectListItem{ Text="installment"},
                new SelectListItem{ Text="Unknowns"}
            }
            , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PaymentOption, "", new { @class = "text-danger" })

                @Html.HiddenFor(m => m.State_Id)
                @Html.HiddenFor(m => m.user_Id)
                @Html.HiddenFor(m => m.link)
                <div class="mt-3 mb-3">
                    <input type="submit" value="Update" class="btn circule send" />
                </div>

            </div>

        </form>
        <div class="details">
            @Html.ActionLink("Back to List", "States", null, new { @class = "btn btn-primary circule buy" })
        </div>

    </div>
}

